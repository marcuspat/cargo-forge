[package]
name = "{{ project_name }}"
version = "{{ version }}"
authors = [{% for author in authors %}"{{ author }}"{% if not loop.last %}, {% endif %}{% endfor %}]
edition = "{{ edition }}"
{% if description %}
description = "{{ description }}"
{% endif %}
{% if license %}
license = "{{ license }}"
{% endif %}
{% if repository %}
repository = "{{ repository }}"
{% endif %}
{% if homepage %}
homepage = "{{ homepage }}"
{% endif %}
{% if readme %}
readme = "{{ readme | default(value="README.md") }}"
{% endif %}
{% if keywords %}
keywords = [{% for keyword in keywords %}"{{ keyword }}"{% if not loop.last %}, {% endif %}{% endfor %}]
{% endif %}
{% if categories %}
categories = [{% for category in categories %}"{{ category }}"{% if not loop.last %}, {% endif %}{% endfor %}]
{% endif %}

{% if project_type == "library" %}
[lib]
name = "{{ project_name | replace(from="-", to="_") }}"
path = "src/lib.rs"
{% endif %}

{% if project_type == "cli-tool" or project_type == "api-server" %}
[[bin]]
name = "{{ project_name }}"
path = "src/main.rs"
{% endif %}

[dependencies]
{% if project_type == "api-server" %}
axum = "0.7"
tokio = { version = "1", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tower = "0.4"
tower-http = { version = "0.5", features = ["trace", "cors"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres"], optional = true }
{% elif project_type == "cli-tool" %}
clap = { version = "4.4", features = ["derive"] }
anyhow = "1.0"
env_logger = "0.11"
log = "0.4"
{% elif project_type == "wasm-app" %}
wasm-bindgen = "0.2"
web-sys = "0.3"
js-sys = "0.3"
console_error_panic_hook = "0.1"
{% endif %}

{% if dev_dependencies %}
[dev-dependencies]
{% for dep, version in dev_dependencies %}
{{ dep }} = "{{ version }}"
{% endfor %}
{% endif %}

{% if project_type == "wasm-app" %}
[lib]
crate-type = ["cdylib"]

[profile.release]
opt-level = "z"
lto = true
{% endif %}

{% if features %}
[features]
{% for feature, deps in features %}
{{ feature }} = [{% for dep in deps %}"{{ dep }}"{% if not loop.last %}, {% endif %}{% endfor %}]
{% endfor %}
{% endif %}